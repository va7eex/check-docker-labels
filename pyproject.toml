[tool.poetry]
name = "check-docker-labels"
version = "0.1.0"
description = ""
authors = ["David Rickett <david@va7eex.ca>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/va7eex/docker-label-linter"
repository = "https://github.com/va7eex/docker-label-linter"
documentation = "https://github.com/va7eex/docker-label-linter#readme"
packages = [{ include = "checkdockerlabels", from = "src" }]

[tool.poetry.scripts]
check-docker-labels = "checkdockerlabels.__main__:app"

[tool.poetry.dependencies]
python = "^3.7"
PyYAML = "*"

[tool.poetry.group.dev.dependencies]
types-PyYAML = "*"
pytest = "*"
pytest-cov = "*"
pytest-html = "*"
mypy = "*"
mypy-extensions = "*"
isort = "*"
black = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.hatch.version]
path = "src/checkdockerlabels/__about__.py"

[tool.pytest.ini_options]
pythonpath = ["src"]
minversion = "7.0"
addopts = "-ra -q --cov --cov-report=term --cov-report=xml"
testpaths = ["tests", "integration"]

[tool.black]
target-version = ["py37"]
line-length = 120

[tool.isort]
profile = "black"

[tool.coverage.run]
source_pkgs = ["checkdockerlabels", "tests"]
branch = true
parallel = true
omit = [
    "src/checkdockerlabels/__about__.py",
    "src/checkdockerlabels/__init__.py",
    "src/checkdockerlabels/__main__.py",
    "**/__init__.py",
]

[tool.coverage.paths]
init = ["src/checkdockerlabels", "*/checkdockerlabels/src/checkdockerlabels"]
tests = ["tests", "*/checkdockerlabels/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
